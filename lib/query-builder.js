// Generated by CoffeeScript 1.6.2
(function() {
  module.exports = {
    createTable: function(data) {
      var query;

      while (data.pk == null) {
        data.pk = 'id';
      }
      return query = ("CREATE TABLE `" + data.table + "` (") + this.getFields(data).join(',') + ", PRIMARY KEY (`id`)) " + "ENGINE=InnoDB DEFAULT CHARSET=utf8" + this.getComment(data) + ";";
    },
    dropTable: function(data) {
      var query;

      return query = "DROP TABLE `" + data.table + "`";
    },
    addColumn: function(data) {
      var columns, query;

      columns = this.getFields(data);
      if (data.after != null) {
        columns = columns.reverse().map(function(r) {
          return "ADD " + r + " AFTER `" + data.after + "`";
        });
      } else {
        columns = columns.map(function(r) {
          return "ADD " + r;
        });
      }
      return query = ("ALTER TABLE `" + data.table + "` ") + columns.join(',');
    },
    delColumn: function(data) {
      var deleteFields, field, query;

      deleteFields = [];
      for (field in data.fields) {
        deleteFields.push("DROP " + field);
      }
      return query = ("ALTER TABLE " + data.table + " ") + deleteFields.join(',');
    },
    getFields: function(data) {
      var comment, fieldArr, fields, name, type;

      fields = data.fields;
      fieldArr = [];
      if (data.pk != null) {
        fieldArr = ["`" + data.pk + "` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'identify'"];
      }
      for (name in fields) {
        type = "";
        comment = "";
        switch (fields[name][0]) {
          case 'string':
            type = "varchar(50) NOT NULL DEFAULT ''";
            break;
          case 'int':
            type = "int(10) unsigned NOT NULL DEFAULT '0'";
            break;
          case 'text':
            type = "text";
            break;
          default:
            type = fields[name][0];
        }
        comment = fields[name][1] ? fields[name][1] : name;
        fieldArr.push("`" + name + "` " + type + " COMMENT '" + comment + "'");
      }
      if (data.timestamps) {
        fieldArr.push("`create_time` datetime NOT NULL");
        fieldArr.push("`update_time` datetime NOT NULL");
      }
      return fieldArr;
    },
    getComment: function(data) {
      if (data.comment != null) {
        return " COMMENT '" + data.comment + "' ";
      } else {
        return "";
      }
    }
  };

}).call(this);
