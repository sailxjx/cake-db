// Generated by CoffeeScript 1.6.2
(function() {
  var fs, path, run, tasks;

  path = require('path');

  fs = require('fs');

  global.__basepath = fs.realpathSync('.');

  run = function(taskName, options) {
    var e, task, taskPath;

    taskPath = taskName.replace(/:/g, '/');
    try {
      task = require("./tasks/" + taskPath);
      if (options.help && (task.help != null)) {
        return task.help();
      }
      return task.main(options);
    } catch (_error) {
      e = _error;
      throw e;
    }
  };

  tasks = {
    'db:migrate': 'migrate the database',
    'db:migrate:new': 'create a new migrate file',
    'db:migrate:status': 'display status of migrations',
    'db:schema:dump': "create a db/schema/version.json to store each table's readable schema",
    'db:rollback': 'rollback the post migrations',
    'db:structure:dump': 'dump the database structure'
  };

  exports.tasks = function() {
    var key, _results;

    option('-h', '--help', 'show helps');
    option('-n', '--name [name]', 'set the migrate file name');
    option('-v', '--version [version]', 'set rollback version');
    _results = [];
    for (key in tasks) {
      _results.push(task(key, tasks[key], function(options) {
        var taskName, _i, _len, _ref, _results1;

        _ref = options["arguments"];
        _results1 = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          taskName = _ref[_i];
          _results1.push(run(taskName, options));
        }
        return _results1;
      }));
    }
    return _results;
  };

}).call(this);
