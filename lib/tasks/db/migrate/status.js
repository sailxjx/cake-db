// Generated by CoffeeScript 1.6.2
(function() {
  var async, colors, db, fs,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  colors = require('colors');

  fs = require('fs');

  db = require('../../../db');

  async = require('async');

  exports.main = function(options) {
    var tPath;

    tPath = "" + global.__basepath + "/db/migrate";
    return fs.readdir(tPath, function(err, fileList) {
      if (err != null) {
        throw err;
      }
      fileList.sort();
      console.log("Status\t\tMigration ID\t\tMigration Name");
      console.log(new Array(60).join('-'));
      return db.loadSchema(function(err, schema) {
        return async.each(fileList, (function(file, next) {
          var msg, version;

          version = file.split('_')[0];
          if (__indexOf.call(schema, version) >= 0) {
            msg = ("up\t\t" + version + "\t") + file.split('.')[0].substr(version.length + 1).replace(/_/g, ' ');
            console.log(msg);
          } else {
            msg = ("down\t\t" + version + "\t") + file.split('.')[0].substr(version.length + 1).replace(/_/g, ' ');
            console.log(msg.red);
          }
          return next();
        }), function(err, result) {
          if (err != null) {
            console.log(err.red);
          }
          return process.exit();
        });
      });
    });
  };

}).call(this);
